{"version":3,"sources":["Layout/Layoutone.tsx","auth/index.tsx","Api/apiconfig.tsx","Api/apicall.tsx","Pages/Signin/Signin.tsx","Component/Navbar1.tsx","assets/images/logo.png","Component/Sidebar.tsx","Layout/Layertwo.tsx","Component/Displayfeedersperf.tsx","Pages/Dashboard.tsx","Component/Displayperformance.tsx","Component/Pagination.tsx","Pages/Manageallocations.tsx","Component/Showsuccess.tsx","Component/Displayusers.tsx","Component/Userform.tsx","Component/Editpassword.tsx","Component/Editemail.tsx","Pages/Users.tsx","Component/Message.tsx","Component/Progress.tsx","Component/Fileupload.tsx","Pages/allocate.tsx","auth/Privateroute.tsx","Route.jsx","index.tsx"],"names":["Layoutone","className","children","isActive","history","path","location","pathname","isSuperadmin","JSON","parse","localStorage","getItem","user","usertype","LOCAL","getAllocations","a","headers","Headers","token","append","fetch","method","fetallocations","json","console","log","signin","Accept","body","stringify","then","response","catch","err","signout","window","removeItem","adduser","fetchusers","updateUser","id","update","updateuser","stats","statsperf","finduser","authorization","updatedetail","updateemail","Signin","useState","email","password","error","loading","redirectToReferrer","values","setValues","handleChange","name","event","target","value","clickSubmit","preventDefault","signdata","data","next","setItem","style","textAlign","backgroundColor","display","to","redirectUser","color","onChange","type","onClick","width","withRouter","toggleSidebar","document","getElementById","classList","add","signoutnow","push","cursor","Sidebar","useHistory","closeSidebar","remove","justifyContent","borderRadius","background","marginBottom","marginTop","src","logo","alt","Layouttwo","Displayfeedersperf","info","modalIsOpen","setModalIsOpen","intype","Modal","setAppElement","useEffect","isOpen","shouldCloseOnOverlayClick","onRequestClose","overlay","content","scope","map","u","i","_id","Math","ceil","totalpaidpop","totalbilledpop","marginLeft","Dashboard","settervar","setSettervar","setIntype","totalPerformance","totalTransformers","totalFeeders","totalDistricts","Districtstats","Tranformerstats","Feederstats","Totalpaidpop","Totalbillpop","Totalbillamt","statistics","setStatistics","setError","loadStatistics","getstats","Totalstats","Number","totalbilledamt","setinfo","setter","typedata","padding","toFixed","replace","toString","Displayperformance","allocations","indexOfFirstPost","connectiontype","cust_category","district","feeder","feeder_code","transformer","transformer_code","billed_pop","paid_pop","billed_amt","paid_amt","arrears","bill_type","MARKETER_NAME","STAFF_ID","marketer_phone","Pagination","postsPerpage","totalPost","paginate","currentPage","pageNumbers","number","marginRight","href","Manageallocations","setCurrentPage","displayAllocations","setdisplayAllocations","indexOfLastPost","currentAllocation","slice","loadDsiplayAllocations","getallocations","ourPerformance","length","pageNumber","Showsuccess","createUser","Displayusers","displayusers","changeStatus","changeaccessStatus","changeModalemail","status","datatype","key","getAttribute","required","Userform","changeModalstate","Editpassword","modalPasswordIsOpen","setModalPasswordIsOpen","edituserinfo","fetchstatus","updatepassword","top","left","right","bottom","onSubmit","placeholder","modalEmailIsOpen","setModalEmailIsOpen","fetchemailstatus","updatemail","Users","setEditUserInfo","setdisplayusers","currentUsers","loadUsers","users","updatestatus","innerText","adduserdata","currentTarget","edituser","Editemail","Message","msg","role","data-dismiss","aria-label","aria-hidden","Progress","percentage","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","uploadPercentage","setUploadpercentage","e","formdata","FormData","axios","post","onUploadProgress","progressEvent","round","loaded","total","setTimeout","res","fileName","filePath","files","htmlFor","Allocate","PrivateRoute","Component","component","rest","render","props","state","from","Routes","exact","ReactDOM","StrictMode","Route"],"mappings":"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","file":"static/js/main.5adc6e97.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\ntype Props = {\r\n    className: string;\r\n    children: any;\r\n  \r\n}\r\n\r\nconst Layoutone: React.FC<Props> = ({className, children}) =>\r\n     \r\n     \r\n    \r\n     (\r\n     <div className={className}>\r\n        \r\n          {children}\r\n\r\n     </div>\r\n     )\r\n     \r\n     \r\n\r\n\r\nexport default Layoutone;","//check if is current path\r\nimport { History } from 'history';\r\ntype Props = {\r\n  \r\n    email: string;\r\n    password: string;\r\n    token:string;\r\n    _id:any;\r\n    \r\n}\r\nexport const isActive = (history: History, path: string) => {\r\n  let activate = history.location.pathname === path ? true : false;\r\n  return activate;\r\n};\r\n\r\n\r\nexport const authenticate = (data:Props, next:any) => {\r\n \r\n    localStorage.setItem(\"usersign\", JSON.stringify(data));\r\n    next();\r\n  \r\n};\r\n\r\nexport const isSuperadmin = () => {\r\n  let { user } = JSON.parse(localStorage.getItem(\"usersign\") || '{}') ;\r\n  let activate = user.usertype === \"superadmin\" ? true : false;\r\n  return activate;\r\n};\r\n\r\n//check if user is signed in\r\nexport const isAuthenticated = () => {\r\n  if (localStorage.getItem(\"usersign\")) {\r\n    return JSON.parse(localStorage.getItem(\"usersign\") || '{}');\r\n  } else {\r\n    return false;\r\n  }\r\n};","/*export const GENERALAPI = \"https://hrbackend-app.herokuapp.com/api\";\r\nexport const USERAPI = \"https://hrbackend-app.herokuapp.com/user\";\r\nexport const LEAVEAPI = \"https://hrbackend-app.herokuapp.com/leave\";\r\nexport const SETTINGS = \"https://hrbackend-app.herokuapp.com/settings\";\r\n*/\r\n\r\n//localhost\r\n\r\nexport const LOCAL = \"http://localhost:8080\";\r\n\r\n","import { LOCAL } from \"./apiconfig\";\r\ntype Props = {\r\n  \r\n    email: string;\r\n    password: string;\r\n  \r\n}\r\n\r\n\r\n//upload excel data to backend\r\n//read all data in performance\r\n//fetch all allocations\r\nexport const getAllocations = async () => {\r\n  const headers = new Headers();\r\n  const { token } = JSON.parse(localStorage.getItem(\"usersign\") || '{}');\r\n  headers.append(\"Accept\", \"application/json\");\r\n  headers.append(\"Content-Type\", \"application/json\");\r\n  headers.append(\"authorization\", `Bearer: ${token}`);\r\n  \r\n  try {\r\n    let fetallocations = await fetch(`${LOCAL}/read`, {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      \r\n    });\r\n    return fetallocations.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//sigin api\r\nexport const signin = async (user:Props) => {\r\n  return fetch(`${LOCAL}/api/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(user),\r\n  })\r\n    .then((response) => {\r\n      console.log(response);\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n//signout\r\nexport const signout = () => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.removeItem(\"usersign\");\r\n    return fetch(`${LOCAL}/api/signout`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => {\r\n        console.log(\"signout\", response);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n};\r\n\r\n\r\n\r\n//add user api\r\nexport const adduser = async (user: Props) => {\r\n  const headers = new Headers();\r\n  const { token } = JSON.parse(localStorage.getItem(\"usersign\") || '{}');\r\n  headers.append(\"Accept\", \"application/json\");\r\n  headers.append(\"Content-Type\", \"application/json\");\r\n  headers.append(\"authorization\", `Bearer: ${token}`);\r\n  return fetch(`${LOCAL}/api/signup`, {\r\n    method: \"POST\",\r\n    headers: headers,\r\n    body: JSON.stringify(user),\r\n  })\r\n    .then((response) => {\r\n      console.log(response);\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n \r\n//fetch users api\r\nexport const fetchusers = async () => {\r\n  const headers = new Headers();\r\n  const { token } = JSON.parse(localStorage.getItem(\"usersign\") || '{}');\r\n  headers.append(\"Accept\", \"application/json\");\r\n  headers.append(\"Content-Type\", \"application/json\");\r\n  headers.append(\"authorization\", `Bearer: ${token}`);\r\n  return fetch(`${LOCAL}/user/read`, {\r\n    method: \"POST\",\r\n    headers: headers,\r\n  \r\n  })\r\n    .then((response) => {\r\n      console.log(response);\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n \r\n//update user\r\nexport const updateUser = async (id: any, update: any) => {\r\n  const headers = new Headers();\r\n  const { token } = JSON.parse(localStorage.getItem(\"usersign\") || '{}');\r\n  headers.append(\"Accept\", \"application/json\");\r\n  headers.append(\"Content-Type\", \"application/json\");\r\n  headers.append(\"authorization\", `Bearer: ${token}`);\r\n  try {\r\n    let updateuser = await fetch(`${LOCAL}/user/updateuser/${id}`, {\r\n      method: \"PUT\",\r\n      headers: headers,\r\n      body: JSON.stringify(update),\r\n    });\r\n    return updateuser.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//fetch statisticall report\r\nexport const stats= async () => {\r\n  const headers = new Headers();\r\n  const { token } = JSON.parse(localStorage.getItem(\"usersign\") || '{}');\r\n  headers.append(\"Accept\", \"application/json\");\r\n  headers.append(\"Content-Type\", \"application/json\");\r\n  headers.append(\"authorization\", `Bearer: ${token}`);\r\n  try {\r\n    let statsperf = await fetch(`${LOCAL}/stats`, {\r\n      method: \"POST\",\r\n      headers: headers,\r\n    });\r\n    return statsperf.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//find a user\r\nexport const finduser = async (id:any) => {\r\n  const { token } = JSON.parse(localStorage.getItem(\"usersign\") || '{}');\r\n\r\n  try {\r\n    let finduser = await fetch(`${LOCAL}/user/finduser/${id}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer: ${token}`,\r\n      },\r\n    });\r\n    return finduser.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//update user\r\nexport const updatedetail = async (id: any, update: any) => {\r\n  const headers = new Headers();\r\n  const { token } = JSON.parse(localStorage.getItem(\"usersign\") || '{}');\r\n  headers.append(\"Accept\", \"application/json\");\r\n  headers.append(\"Content-Type\", \"application/json\");\r\n  headers.append(\"authorization\", `Bearer: ${token}`);\r\n  try {\r\n    let updateuser = await fetch(`${LOCAL}/user/updatedetail/${id}`, {\r\n      method: \"PUT\",\r\n      headers: headers,\r\n      body: JSON.stringify(update),\r\n    });\r\n    return updateuser.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n//update Email\r\nexport const updateemail = async (id: any, update: any) => {\r\n  const headers = new Headers();\r\n  const { token } = JSON.parse(localStorage.getItem(\"usersign\") || '{}');\r\n  headers.append(\"Accept\", \"application/json\");\r\n  headers.append(\"Content-Type\", \"application/json\");\r\n  headers.append(\"authorization\", `Bearer: ${token}`);\r\n  try {\r\n    let updateuser = await fetch(`${LOCAL}/user/updateemail/${id}`, {\r\n      method: \"PUT\",\r\n      headers: headers,\r\n      body: JSON.stringify(update),\r\n    });\r\n    return updateuser.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n\r\n","import { Redirect } from \"react-router-dom\";\r\nimport Layoutone from \"../../Layout/Layoutone\";\r\n//import { GoogleLogin } from 'react-google-login';\r\nimport React, { useState } from \"react\";\r\nimport { authenticate } from \"../../auth\";\r\nimport { signin } from '../../Api/apicall';\r\nimport \"./Signin.css\";\r\n\r\nconst Signin = () => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    loading: false,\r\n    redirectToReferrer: false,\r\n  });\r\n  const {\r\n    email,\r\n    password,\r\n    error,\r\n    loading,\r\n    redirectToReferrer,\r\n  } = values;\r\n\r\n  //handle change input\r\n  const handleChange = (name:string) => (event:React.ChangeEvent<any>) => {\r\n    setValues({ ...values, error: \"\", [name]: event.target.value });\r\n  };\r\n   //handle form submission\r\n  const clickSubmit = async (event: React.ChangeEvent<any>) => {\r\n    console.log(error);\r\n    event.preventDefault();\r\n    //set loading to true\r\n    setValues({ ...values, error: \"\", loading: true });\r\n    //access sign in api\r\n    let signdata = await signin({ email, password });\r\n    if (signdata.error) {\r\n      setValues({ ...values, error: signdata.error, loading: false });\r\n    } else {\r\n      authenticate(signdata, () => {\r\n        setValues({ ...values, redirectToReferrer: true });\r\n      });\r\n    }\r\n  };\r\n\r\n \r\n  \r\n/*\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [imageUrl, setUrl] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  \r\n  const responseGoogle = async (response) => {\r\n  \r\n  await  setName(response.profileObj.name);\r\n  await setEmail(response.profileObj.email);\r\n  await setUrl(response.profileObj.imageUrl);\r\n  await setToken(response.tokenObj.id_token);\r\n  let data = { name, email, imageUrl, token };\r\n    //console.log(response);  \r\n    console.log(await login(data));\r\n  \r\n}\r\n*/\r\n\r\n \r\n  const signUpForm = () => (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-mute text-primary-p\" style={{color: \"#000000\"}}>Email:</label>\r\n      <div className=\"input-container\">\r\n        <i className=\"fa fa-envelope icon\"></i>\r\n        <input\r\n        \r\n          value={email}\r\n          onChange={handleChange(\"email\")}\r\n          type=\"email\"\r\n         className=\"input-field\"\r\n        />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-mute text-primary-p\" style={{color: \"#000000\"}}>Password:</label>\r\n        <div className=\"input-container\">\r\n          <i className=\"fa fa-key icon\"></i>\r\n        <input\r\n          onChange={handleChange(\"password\")}\r\n          value={password}\r\n          type=\"password\"\r\n          className=\"input-field\"\r\n        />\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n         onClick={clickSubmit}\r\n        className=\"btn btn-primary\"\r\n        style={{ backgroundColor: \"#265acc\",  width: \"100%\" }}\r\n      >\r\n        LOGIN\r\n      </button>\r\n      \r\n    </form>\r\n  );\r\n   //show loading\r\n  const showLoading = () =>\r\n    loading && (\r\n      <div className=\"spinning\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n//error div\r\n  const showError = () => (\r\n    <div\r\n      className=\"alert alert-danger\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n  // redirect user to dashboard if referer is true\r\n  const redirectUser = () => {\r\n    if (redirectToReferrer) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n    }\r\n  };\r\n  return (\r\n    <Layoutone className=\"outerdiv\">\r\n      <div className=\"loginbanner\">\r\n        <div className=\"card\" style={{ textAlign: \"left\" }}>\r\n          <div className=\"card-header\" style={{ backgroundColor: \"#265acc\" }}>\r\n            LOGIN\r\n          </div>\r\n          <div className=\"card-body\">\r\n            {showError()}\r\n            {showLoading()}\r\n            {redirectUser()}\r\n            {signUpForm()}\r\n            {\r\n              /*\r\n              <GoogleLogin\r\n                clientId=\"1045668157554-ts7mnbvqau4k4180dti37g967d0sf289.apps.googleusercontent.com\"\r\n                buttonText=\"login\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n            */\r\n            }\r\n             \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layoutone>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport { Link,RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {signout} from \"../Api/apicall\";\r\nimport { History } from 'history';\r\ninterface IProps extends RouteComponentProps{\r\n    history: History;\r\n    // any other props that come into the component\r\n}\r\nconst Navbar1 = ({ history }: IProps) => {\r\n  const toggleSidebar = async () => {\r\n    //define central store nd access redux\r\n    var sidebar:any = document.getElementById(\"sidebar\");\r\n    sidebar.classList.add(\"sidebar_responsive\");\r\n  };\r\n const signoutnow =async() => {\r\n   await signout();\r\n   history.push(\"/\")\r\n  };\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"nav_icon\" onClick={toggleSidebar}>\r\n        <i className=\"fa fa-bars\"></i>\r\n      </div>\r\n      <div className=\"navbar__left\">\r\n     \r\n           \r\n        <span\r\n            onClick={() => signoutnow()}\r\n            className=\"nav-link\"\r\n            style={{ cursor: \"pointer\", color: \"red\" }}\r\n          >\r\n            <i className=\"fa fa-power-off\"></i>\r\n            Log out\r\n          </span>\r\n        \r\n      \r\n       \r\n      </div>\r\n      <div>\r\n         <h2 className=\"font-bold\" >MARKETERS PERFORMANCE TRACKER</h2>\r\n      </div>\r\n      <div className=\"navbar__right\">\r\n    \r\n        <Link to=\"#\">\r\n          <i className=\"fa fa-search\"></i>\r\n        </Link>\r\n        <Link to=\"#\">\r\n          <i className=\"fa fa-clock-o\"></i>\r\n        </Link>\r\n        <Link to=\"#\">\r\n         \r\n        </Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navbar1);\r\n","export default __webpack_public_path__ + \"static/media/logo.8a3cb3a3.png\";","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { isActive } from \"../auth\";\r\nimport logo from \"../assets/images/logo.png\";\r\n\r\nconst Sidebar = () => {\r\n  let history = useHistory();\r\n  const closeSidebar = async () => {\r\n    //define central store nd access redux\r\n    const  sidebar:any= document.getElementById(\"sidebar\");\r\n    sidebar.classList.remove(\"sidebar_responsive\");\r\n  };\r\n \r\n  return (\r\n    <div id=\"sidebar\">\r\n      <div className=\"sidebar__title\">\r\n        <div className=\"sidebar__img\"></div>\r\n        <i className=\"fa fa-times\" id=\"sidebarIcon\" onClick={closeSidebar}></i>\r\n      </div>\r\n      <div style={{ display: \"flex\",backgroundColor:\"#ffffff\",  justifyContent: \"center\" }}>\r\n        <img\r\n          style={{ width: \"100px\", borderRadius: \"30%\", background: \"#fff\", marginBottom: \"50px\",marginTop: \"30px\" }}\r\n          src={logo}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"sidebar__menu\">\r\n        <div\r\n          className={\r\n            isActive(history, \"/dashboard\")\r\n              ? \"sidebar__link active_menu_link\"\r\n              : \"sidebar__link\"\r\n          }\r\n        >\r\n          <i className=\"fa fa-home\"></i>\r\n          <Link to=\"/dashboard\">Dashboard</Link>\r\n        </div>\r\n{/**this handles the account management section including profile */}\r\n        <h2>ALLOCATION</h2>\r\n        <div\r\n          className={\r\n            isActive(history, \"/allocate\")\r\n              ? \"sidebar__link active_menu_link\"\r\n              : \"sidebar__link\"\r\n          }\r\n        >\r\n         <i className=\"fab fa-acquisitions-incorporated\"></i>\r\n\r\n          <Link to=\"/allocate\">Upload Data</Link>\r\n              </div>\r\n              \r\n              {/**this section handles routing for Complain management*/}\r\n            \r\n            \r\n       \r\n        <div\r\n          className={\r\n            isActive(history, \"/manageallocations\")\r\n              ? \"sidebar__link active_menu_link\"\r\n              : \"sidebar__link\"\r\n          }\r\n        >\r\n   <i className=\"fas fa-bullseye\"></i>\r\n\r\n          <Link to=\"/manageallocations\">Performance Summary</Link>\r\n              </div>\r\n                {/**this section handles routing for Users*/}\r\n                <h2>Manage Users</h2>\r\n       \r\n              \r\n            \r\n            \r\n            \r\n       \r\n        <div\r\n          className={\r\n            isActive(history, \"/users\")\r\n              ? \"sidebar__link active_menu_link\"\r\n              : \"sidebar__link\"\r\n          }\r\n        >\r\n        <i className=\"fa fa-handshake-o\"></i>\r\n\r\n          <Link to=\"/users\">Manage Users</Link>\r\n              </div>\r\n              \r\n              \r\n</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Sidebar;\r\n\r\n","import Navbar1 from '../Component/Navbar1';\r\nimport Sidebar from '../Component/Sidebar';\r\nimport './Layertwo.css';\r\n\r\nimport React from 'react';\r\ntype Props = {\r\n    children: React.ReactNode;\r\n}\r\n\r\n\r\nconst Layouttwo: React.FC<Props> = ({children}) => \r\n{\r\n\r\nreturn(\r\n    <div className=\"contain\">\r\n        <Navbar1  />\r\n        <main>\r\n           {children}\r\n        </main>\r\n        \r\n        <Sidebar/>\r\n       \r\n       \r\n   \r\n    </div>\r\n\r\n)\r\n}\r\nexport default Layouttwo;\r\n","import React,{useState,useEffect,Fragment} from 'react'\r\nimport Modal from \"react-modal\";\r\n\r\ntype Props = {\r\n    info: any;\r\n    modalIsOpen: any;\r\n    setModalIsOpen: any;\r\n    intype : string;\r\n\r\n\r\n}\r\nconst Displayfeedersperf = ({ info,modalIsOpen,\r\n  setModalIsOpen,intype }:Props) => {\r\n  Modal.setAppElement(\"#root\");\r\n\r\n\r\n  let [values, setValues] = useState<any[]>([]);\r\n  let gt = () =>\r\n    setValues(info);\r\n \r\n\r\n  useEffect(() => {\r\n    gt();\r\n  }, [info]);\r\n  //console.log(edituserinfo.users[0].firstname);\r\n\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnOverlayClick={false}\r\n        onRequestClose={() => setModalIsOpen(false)}\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"#000000\",\r\n          },\r\n          content: {\r\n            color: \"#000000\",\r\n          },\r\n        }}\r\n      >\r\n        <Fragment >\r\n          <h2 className=\"font-bold\">{ `PERFORMANCE BY ${intype}`}</h2>\r\n  \r\n      <table className=\"table\" >\r\n        <thead>\r\n              <tr>\r\n                <th scope=\"col\">S/N</th>\r\n                <th scope=\"col\"></th>\r\n                 <th  scope=\"col\"></th>\r\n                <th scope=\"col\">{intype}</th>\r\n            <th  scope=\"col\">PERFORMANCE</th>\r\n          \r\n           \r\n            \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n           {values.map((u:any, i:number) => (\r\n            <tr key={i}>\r\n               <td>{i + 1}</td>\r\n               <td></td>\r\n               <td></td>\r\n               <td>{u._id}</td>\r\n              \r\n              \r\n               <td>\r\n                 \r\n                 {Math.ceil(u.totalpaidpop/u.totalbilledpop * 100) + '%'}\r\n                 \r\n                </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n         \r\n            <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => setModalIsOpen(false)}\r\n            style={{ marginLeft: \"10px\" }}\r\n          >\r\n            Cancel\r\n          </button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Displayfeedersperf;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layouttwo from \"../Layout/Layertwo\";\r\nimport { stats } from '../Api/apicall';\r\nimport Displayfeedersperf from '../Component/Displayfeedersperf'\r\n\r\nconst Dashboard = () => {\r\n\r\n\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [settervar, setSettervar] = useState<any[]>([]);\r\n    const [intype, setIntype] = useState<any>(\"\");\r\n  \r\n  const [statistics, setStatistics] = useState({\r\n    totalPerformance: \"\",\r\n    totalTransformers: \"\",\r\n    totalFeeders: \"\",\r\n    totalDistricts: \"\",\r\n    Districtstats:[],\r\n    Tranformerstats:[],\r\n    Feederstats: [],\r\n    Totalpaidpop: \"\",\r\n    Totalbillpop: \"\",\r\n    Totalbillamt: 0,\r\n\r\n  });\r\n  const { totalPerformance,\r\n    totalTransformers,\r\n    totalFeeders,\r\n    totalDistricts,\r\n    Districtstats,\r\n    Tranformerstats,\r\n    Feederstats,\r\n    Totalpaidpop,Totalbillpop,Totalbillamt} = statistics;\r\n  const [error, setError] = useState<string>('');\r\n \r\n  //load statistics\r\n  const loadStatistics = async () => {\r\n    let getstats = await stats();\r\n    getstats.error ? setError(getstats.error)\r\n      : setStatistics({\r\n        ...statistics, totalPerformance: getstats.totalPerformance,\r\n        totalTransformers: getstats.totalTransformers,\r\n        totalFeeders: getstats.totalFeeders,\r\n        totalDistricts: getstats.totalDistricts,\r\n        Feederstats: getstats.Feederstats,\r\n        Districtstats:getstats.Districtstats,\r\n        Tranformerstats: getstats.Tranformerstats,\r\n        Totalpaidpop: getstats.Totalstats[0].totalpaidpop + getstats.Totalstats[1].totalpaidpop,\r\n        Totalbillpop:getstats.Totalstats[0].totalbilledpop + getstats.Totalstats[1].totalbilledpop,\r\n        Totalbillamt: Number(getstats.Totalstats[0].totalbilledamt) + Number(getstats.Totalstats[1].totalbilledamt),\r\n       \r\n      });\r\n\r\n      \r\n  };\r\n  const setinfo = (setter: any, typedata:string) => {\r\n    \r\n    setSettervar(setter);\r\n    setIntype(typedata);\r\n    setModalIsOpen(true)\r\n  }\r\n     \r\n\r\n  useEffect(() => {\r\n    loadStatistics();\r\n   \r\n  }, []);\r\n  //error div\r\n  const showError = () => (\r\n    <div\r\n      className=\"alert alert-danger\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n  return (\r\n    <Layouttwo>\r\n      <div className=\"main__container\">\r\n        <div className=\"main__title\">\r\n          <img src=\"assets/banner.jpg\" alt=\"\" />\r\n          <div className=\"main__greeting\">\r\n            <h1 className=\"text-primary-p\">DASHBOARD</h1>\r\n       \r\n          </div>\r\n        </div>\r\n\r\n        <hr className=\"main__cards\" />\r\n        {showError()}\r\n        <div className=\"charts\">\r\n          <div className=\"charts__left\">\r\n            <div className=\"charts__left__title\">\r\n              <div>\r\n                <h1 className=\"text-title\">Summary</h1>\r\n              </div>\r\n            </div>\r\n            \r\n            <div id=\"apex1\">\r\n               <div className=\"card4\" style={{padding: \"2px\",backgroundColor:\"#fff\"}}>\r\n                <h1 className=\"text-lightblue\">Total Billed Amount</h1>\r\n            \r\n                <p>{Totalbillamt.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,') }</p>\r\n              </div>\r\n             \r\n               <div className=\"card4\" style={{padding: \"2px\",backgroundColor:\"#fff\"}}>\r\n                <h1 className=\"text-lightblue\">Total Billed PoP</h1>\r\n                <p>{Totalbillpop.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') }</p>\r\n              </div>\r\n               <div className=\"card4\" style={{padding: \"2px\",backgroundColor:\"#fff\"}}>\r\n                <h1 className=\"text-lightblue\">Total Paid Pop</h1>\r\n                <p>{Totalpaidpop.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') }</p>\r\n                </div>\r\n             \r\n           \r\n            </div>\r\n          </div>\r\n          <div className=\"charts__right\">\r\n            <div className=\"charts__right__title\">\r\n              <div>\r\n                <h1 className=\"text-title\">Summary Data</h1>\r\n              </div>\r\n            </div>\r\n            <div className=\"charts__right__cards\">\r\n            \r\n              <div className=\"card1\">\r\n                <h1 className=\"text-lightblue\">Total Number of Records</h1>\r\n                <p>{totalPerformance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') }</p>\r\n                </div>\r\n              \r\n              \r\n               \r\n   \r\n<button onClick={() => setinfo(Districtstats,\"DISTRICTS\")}>\r\n              <div className=\"card2\">\r\n                <h1 className=\"text-lightblue\">Total Number of Districts</h1>\r\n                <p>{ totalDistricts.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</p>\r\n                </div>\r\n                </button>\r\n              \r\n             <button onClick={() => setinfo(Feederstats, \"FEEDERS\")}>\r\n              <div className=\"card3\">\r\n                <h1  className=\"text-lightblue\">Total Number of Feeders</h1>\r\n                <p>{ totalFeeders.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</p>\r\n                </div>\r\n              </button>\r\n             \r\n       \r\n     \r\n            <button onClick={() => setinfo(Tranformerstats,\"TRANSFORMERS\")}>\r\n              <div className=\"card4\">\r\n                <h1  className=\"text-lightblue\">Total Number of Transformers</h1>\r\n                <p>{ totalTransformers.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</p>\r\n                </div>\r\n                </button>\r\n            </div>\r\n          </div>\r\n              </div>\r\n             \r\n                <Displayfeedersperf\r\n        modalIsOpen={modalIsOpen}\r\n        setModalIsOpen={setModalIsOpen}\r\n          info={settervar}\r\n          intype={intype}\r\n       \r\n      />\r\n              \r\n      </div>\r\n    </Layouttwo>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","\r\ntype Props = {\r\n  allocations: any;\r\n  indexOfFirstPost: number;\r\n}\r\n\r\nconst Displayperformance = ({ allocations,indexOfFirstPost }:Props) => {\r\n  return (\r\n    <div>\r\n      {console.log(allocations)}\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\">connectiontype</th>\r\n            <th scope=\"col\">cust_category</th>\r\n            <th scope=\"col\">district</th>\r\n            <th scope=\"col\">feeder</th>\r\n            <th scope=\"col\">feeder_code</th>\r\n            <th scope=\"col\">transformer</th>\r\n            <th scope=\"col\">transformer_code</th>\r\n            <th scope=\"col\">billed_pop</th>\r\n            <th scope=\"col\">paid_pop</th>\r\n             <th scope=\"col\">CC</th>\r\n            <th scope=\"col\">billed_amt</th>\r\n            <th scope=\"col\">paid_amt</th>\r\n            <th scope=\"col\">CE</th>\r\n            <th scope=\"col\">arrears</th>\r\n            <th scope=\"col\">bill_type</th>\r\n            <th scope=\"col\">MARKETER_NAME</th>\r\n            <th scope=\"col\">STAFF_ID</th>\r\n            <th scope=\"col\">marketer_phone</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n           {allocations.map((u:any, i:number) => (\r\n            <tr key={i}>\r\n               <td>{indexOfFirstPost=indexOfFirstPost + 1}</td>\r\n               <td>{ u.connectiontype}</td>\r\n               <td>{u.cust_category }</td>\r\n              <td>{u.district}</td>\r\n              <td>{u.feeder}</td>\r\n              <td>{u.feeder_code}</td>\r\n              <td>{u.transformer}</td>\r\n              <td>{u.transformer_code}</td>\r\n              <td>{u.billed_pop}</td>\r\n               <td>{u.paid_pop}</td>\r\n               <td>{Math.ceil(u.paid_pop/u.billed_pop*100) +'%'}</td>\r\n              <td>{(Number(u.billed_amt)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</td>\r\n               <td>{(Number(u.paid_amt)).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</td>\r\n                 <td>{Math.ceil(Number(u.paid_amt)/Number(u.billed_amt)*100) + '%'}</td>\r\n               <td>{u.arrears.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}</td>\r\n               <td>{u.bill_type}</td>\r\n               <td>{u.MARKETER_NAME}</td>\r\n               <td>{u.STAFF_ID}</td>\r\n               <td>{`0${u.marketer_phone}`}</td>\r\n\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default Displayperformance;\r\n","import React from \"react\";\r\ntype Props = {\r\n    postsPerpage: number;\r\n    totalPost: number;\r\n    paginate: any;\r\n    currentPage: number;\r\n    \r\n}\r\n\r\nconst Pagination = ({ postsPerpage, totalPost, paginate, currentPage }:Props) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPost / postsPerpage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <nav id=\"pagination\">\r\n      <ul className=\"pagination\">\r\n        {pageNumbers.map((number) => (\r\n          <li\r\n            key={number}\r\n            className=\"page-item\"\r\n            style={{\r\n              backgroundColor: \"#DA251C\",\r\n              marginRight: \"0.6rem\",\r\n            }}\r\n          >\r\n            <a\r\n              onClick={() => paginate(number)}\r\n              href=\"#\"\r\n              className=\"page-link\"\r\n              style={\r\n                currentPage === number\r\n                  ? {\r\n                      color: \"#ffffff\",\r\n                      backgroundColor: \"#DA251C\",\r\n                      borderRadius: \"50%\",\r\n                    }\r\n                  : {\r\n                      color: \"#ffffff\",\r\n                      backgroundColor: \"#265acc\",\r\n                      borderRadius: \"50%\",\r\n                    }\r\n              }\r\n            >\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layouttwo from \"../Layout/Layertwo\";\r\nimport { getAllocations } from \"../Api/apicall\";\r\nimport Displayperformance from '../Component/Displayperformance';\r\nimport Pagination from '../Component/Pagination';\r\n\r\nconst Manageallocations = () => {\r\n   const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [postsPerpage] = useState<number>(500);\r\n  const [displayAllocations, setdisplayAllocations] = useState([]);\r\n   const [error, setError] = useState<string>('');\r\n\r\n  //Get current posts\r\n  const indexOfLastPost = currentPage * postsPerpage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerpage;\r\n  const currentAllocation = displayAllocations.slice(indexOfFirstPost, indexOfLastPost);\r\n//load allocations\r\n  const loadDsiplayAllocations = async () => {\r\n    let getallocations = await getAllocations();\r\n    getallocations.error ? setError(getallocations.error) : setdisplayAllocations(getallocations.ourPerformance);\r\n    \r\n    \r\n  };\r\n  const paginate = (pageNumber:number) => {\r\n    //setInfo(\"\");\r\n    setCurrentPage(pageNumber);\r\n  };\r\n \r\nuseEffect(() => {\r\n     loadDsiplayAllocations();\r\n  }, []);\r\n  \r\n  //error div\r\n  const showError = () => (\r\n    <div\r\n      className=\"alert alert-danger\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n  return (\r\n    <Layouttwo>\r\n      <div className=\"main__container\">\r\n        <div className=\"main__title\">\r\n          <img src=\"assets/banner.jpg\" alt=\"\" />\r\n          <div className=\"main__greeting\">\r\n            <h1 className=\"text-primary-p\">Manage Allocations</h1>\r\n       \r\n          </div>\r\n        </div>\r\n\r\n        <hr className=\"main__cards\" />\r\n        {showError()}\r\n        <Displayperformance\r\n          allocations={currentAllocation} indexOfFirstPost={indexOfFirstPost} />\r\n        <Pagination postsPerpage={postsPerpage} totalPost={displayAllocations.length} paginate={paginate} currentPage={currentPage} />\r\n        \r\n        \r\n       \r\n      </div>\r\n    </Layouttwo>\r\n  );\r\n};\r\nexport default Manageallocations;\r\n","import React from \"react\";\r\ntype Props = {\r\n    createUser: string;\r\n}\r\nconst Showsuccess = ({ createUser}:Props) => {\r\n  const showSuccess = () =>\r\n    createUser && (\r\n      <div className=\"alert alert-info\">\r\n        <h2> {`${createUser}`}</h2>\r\n      </div>\r\n    );\r\n\r\n  return <div>{showSuccess()}</div>;\r\n};\r\nexport default Showsuccess;\r\n","import { Fragment } from 'react';\r\nimport React, { useState } from \"react\";\r\nimport { isSuperadmin } from \"../auth\";\r\ntype Props = {\r\n  displayusers: any;\r\n  changeStatus: any;\r\n  indexOfFirstPost: number;\r\n  changeModalemail: any;\r\n  changeaccessStatus: any;\r\n}\r\n\r\nconst Displayusers = ({ displayusers,changeStatus,changeaccessStatus,indexOfFirstPost,changeModalemail }:Props) => {\r\n const [values, setValues] = useState({\r\n      error: \"\",\r\n    createUser:\"\",\r\n   usertype: \"\",\r\n   \r\n  \r\n  });\r\n  //handle change input\r\n  const handleChange = (name: string) => (event: React.ChangeEvent<any>) => {\r\n    const target = event.target as HTMLSelectElement;\r\n   const key = target.getAttribute('datatype');\r\n    setValues({ ...values, error: \"\", createUser: \"\", [name]: event.target.value });\r\n    changeaccessStatus(key, event.target.value);\r\n     \r\n    \r\n    //loadUsers();\r\n  };\r\n  return (\r\n    <Fragment >\r\n  \r\n \r\n      <table className=\"table\" >\r\n        <thead>\r\n          <tr>\r\n            <th  scope=\"col\"></th>\r\n            \r\n            <th  scope=\"col\">Email</th>\r\n         \r\n            <th  scope=\"col\">Update Status</th>\r\n          \r\n            <th scope=\"col\">ResetPassword</th>\r\n            <th scope=\"col\">Change Email</th>\r\n            <th scope=\"col\">Change Access Type</th>\r\n            <th  scope=\"col\">Access Type</th>\r\n            \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n           {displayusers.map((u:any, i:number) => (\r\n            <tr key={i}>\r\n               <td>{indexOfFirstPost=indexOfFirstPost + 1}</td>\r\n               <td>{u.email}</td>\r\n               <td>\r\n                 <button\r\n                  style={isSuperadmin()?{display:''}:{display:'none'}}\r\n                onClick={changeStatus}\r\n                  value={u._id}\r\n                  type=\"button\"\r\n                  className={\r\n                    u.status === \"active\" ? \"btn btn-danger\" : \"btn btn-success\"\r\n                  }\r\n                >\r\n                  {u.status === \"active\" ? \"Deactivate\" : \"Activate\"}\r\n                </button>\r\n               </td>\r\n              \r\n               <td>\r\n                 <button\r\n                   style={isSuperadmin()?{display:''}:{display:'none'}}\r\n                  onClick={changeStatus}\r\n                  value={u._id}\r\n                  type=\"button\"\r\n                  className=\r\n                     \"btn btn-success\"\r\n                  \r\n                >\r\n                  Reset\r\n                </button>\r\n                 \r\n                 \r\n               </td>\r\n                <td>\r\n                 <button\r\n                   style={isSuperadmin()?{display:''}:{display:'none'}}\r\n                    onClick={changeModalemail}\r\n                  value={u._id}\r\n                  type=\"button\"\r\n                  className=\r\n                     \"btn btn-dark\"\r\n                  \r\n                >\r\n                  <i className=\"fas fa-users-cog\"></i>\r\n                </button>\r\n                 \r\n                 \r\n               </td>\r\n               <td style={isSuperadmin()?{display:''}:{display:'none'}}>\r\n                   <form>\r\n                      <div className=\"form-group\">\r\n                     <select\r\n                       datatype={u._id}\r\n                       onChange={handleChange(\"usertype\")}\r\n                       className=\"form-control\"\r\n                       required\r\n                       >\r\n                       <option>Please Select</option>\r\n                       <option  value=\"superadmin\">Super Admin</option>\r\n                       <option value=\"admin\">Admin</option>\r\n                     </select>\r\n                     <input value={u._id} type=\"hidden\"/>\r\n                   </div>\r\n                   </form>\r\n                 \r\n               </td>\r\n               <td>{ u.usertype}</td>\r\n               \r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Displayusers;\r\n","import React,{Fragment} from 'react';\r\ntype Props = {\r\n    email: any;\r\n    handleChange: any;\r\n  clickSubmit: any;\r\n  changeModalstate: any;\r\n    \r\n}\r\nconst {user} =JSON.parse(localStorage.getItem(\"usersign\") || '{}') \r\nconst Userform = ({ email, handleChange, clickSubmit,changeModalstate }:Props) => {\r\n    const adduserform = () => (\r\n   <form>\r\n        <div className=\"form-group\">\r\n          <input\r\n        value={email}\r\n        onChange={handleChange(\"email\")}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n          />\r\n          \r\n         \r\n    </div>\r\n     <button\r\n        type=\"submit\"\r\n          onClick={clickSubmit}\r\n          \r\n        className=\"btn btn-primary btn-block mt-4\"\r\n        \r\n      >\r\n        Submit\r\n      </button>\r\n        \r\n   \r\n      </form>\r\n    \r\n);\r\n    return (\r\n        <Fragment>\r\n        {adduserform()}\r\n        <button\r\n          type=\"button\"\r\n          value={user._id }\r\n       onClick={changeModalstate}\r\n        className=\"btn btn-dark btn-block mt-4\"\r\n        \r\n      >\r\n        Change Password\r\n      </button>\r\n\r\n        </Fragment>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default Userform;\r\n\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { updatedetail } from \"../Api/apicall\";\r\ntype Props = {\r\n    modalPasswordIsOpen: any;\r\n    setModalPasswordIsOpen: any;\r\n    edituserinfo: any;\r\n    fetchstatus: any;\r\n  \r\n    \r\n}\r\n\r\nconst Editpassword = ({\r\n  modalPasswordIsOpen,\r\n  setModalPasswordIsOpen,\r\n    edituserinfo,\r\n  fetchstatus,\r\n \r\n}:Props) => {\r\n  Modal.setAppElement(\"#root\");\r\n\r\n  let { _id } = edituserinfo;\r\n  let [values, setValues] = useState({\r\n    password: \"\",\r\n  });\r\n\r\n  //check selected to identify selected\r\n  const handleChange = (name:any) => (event:any) => {\r\n    const value = event.target.value;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const clickSubmit = async (event:any) => {\r\n      event.preventDefault();\r\n      let id = _id;\r\n       \r\n    let updatepassword = await updatedetail(id, { ...values });\r\n    setValues({ ...values, password: \"\" });\r\n    fetchstatus(updatepassword);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalPasswordIsOpen}\r\n        shouldCloseOnOverlayClick={false}\r\n        onRequestClose={() => setModalPasswordIsOpen(false)}\r\n        style={{\r\n          content: {\r\n            color: \"#000000\",\r\n            top: \"40%\",\r\n            left: \"30%\",\r\n            right: \"auto\",\r\n            bottom: \"auto\",\r\n            marginRight: \"-50%\",\r\n            width: \"40%\",\r\n            backgroundColor: \"#35a4ba\",\r\n       \r\n            //transform: \"translate(-50%, -50%)\",\r\n          },\r\n        }}\r\n      >\r\n        <form onSubmit={clickSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col-sm-12 col-lg-12\">\r\n              <div className=\"form-group\">\r\n                <label>Enter New Password:</label>\r\n                <input\r\n                  value={values.password}\r\n                  onChange={handleChange(\"password\")}\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  placeholder=\"Enter New Password\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"btn btn-primary\">Submit</button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => setModalPasswordIsOpen(false)}\r\n            style={{ marginLeft: \"10px\" }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editpassword;\r\n","import React, { useState} from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { updateemail } from \"../Api/apicall\";\r\ntype Props = {\r\n    modalEmailIsOpen: any;\r\n    setModalEmailIsOpen: any;\r\n    edituserinfo: any;\r\n    fetchemailstatus: any;\r\n  \r\n    \r\n}\r\n\r\nconst Editpassword = ({\r\n  modalEmailIsOpen,\r\n    setModalEmailIsOpen,\r\n    edituserinfo,\r\n  fetchemailstatus,\r\n \r\n}:Props) => {\r\n  Modal.setAppElement(\"#root\");\r\n\r\n  let { _id } = edituserinfo;\r\n  let [values, setValues] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  //check selected to identify selected\r\n  const handleChange = (name:any) => (event:any) => {\r\n    const value = event.target.value;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const clickSubmit = async (event:any) => {\r\n      event.preventDefault();\r\n      let id = _id;\r\n       \r\n    let updatemail = await updateemail(id, { ...values });\r\n    setValues({ ...values, email: \"\" });\r\n    fetchemailstatus(updatemail);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modalEmailIsOpen}\r\n        shouldCloseOnOverlayClick={false}\r\n        onRequestClose={() => setModalEmailIsOpen(false)}\r\n        style={{\r\n          content: {\r\n            color: \"#000000\",\r\n            top: \"40%\",\r\n            left: \"30%\",\r\n            right: \"auto\",\r\n            bottom: \"auto\",\r\n            marginRight: \"-50%\",\r\n            width: \"40%\",\r\n            backgroundColor: \"#35a4ba\",\r\n       \r\n            //transform: \"translate(-50%, -50%)\",\r\n          },\r\n        }}\r\n      >\r\n        <form onSubmit={clickSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"input-field col-sm-12 col-lg-12\">\r\n              <div className=\"form-group\">\r\n                <label>Enter New Email:</label>\r\n                <input\r\n                  value={values.email}\r\n                  onChange={handleChange(\"email\")}\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  placeholder=\"Enter New Password\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"btn btn-primary\">Submit</button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => setModalEmailIsOpen(false)}\r\n            style={{ marginLeft: \"10px\" }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editpassword;\r\n","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Layouttwo from \"../Layout/Layertwo\";\r\nimport { adduser,fetchusers,updateUser,finduser, signout } from \"../Api/apicall\";\r\nimport Showsuccess from \"../Component/Showsuccess\";\r\nimport Displayusers from \"../Component/Displayusers\";\r\nimport Userform from \"../Component/Userform\";\r\nimport Pagination from \"../Component/Pagination\";\r\nimport Editpassword from \"../Component/Editpassword\";\r\nimport Editemail from \"../Component/Editemail\";\r\n\r\nconst Users = () => {\r\n  const [modalPasswordIsOpen, setModalPasswordIsOpen] = useState(false);\r\n   const [modalEmailIsOpen, setModalEmailIsOpen] = useState(false);\r\n  const [edituserinfo, setEditUserInfo] = useState({\r\n    usertype: \"\",\r\n    status: \"\",\r\n    _id: \"\",\r\n    email: \"\",\r\n  });\r\n  const [displayusers, setdisplayusers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [postsPerpage] = useState<number>(1);\r\n  //Get current posts\r\n  const indexOfLastPost = currentPage * postsPerpage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerpage;\r\n  const currentUsers = displayusers.slice(indexOfFirstPost, indexOfLastPost);\r\n   const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"eedc01\",\r\n     error: \"\",\r\n    createUser:\"\",\r\n  \r\n  });\r\n  const {\r\n    email,\r\n    password,\r\n    error,\r\n    createUser,\r\n    \r\n  } = values;\r\n  const loadUsers = () => {\r\n    fetchusers().then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setdisplayusers(data.users);\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n  const changeaccessStatus = async (key: any, usertype: any) => {\r\n    \r\n    let updatestatus = await updateUser(key, { usertype });\r\n    updatestatus.error\r\n      ?  setValues({ ...values,createUser:\"\", error: updatestatus.error})\r\n      : setValues({ ...values, error: \"\", createUser: \"Access Type Changed\" });\r\n    loadUsers();\r\n   \r\n    \r\n  }\r\n const changeStatus = async (event:any) => {\r\n   let status;\r\n  \r\n  let id = event.target.value;\r\n   if (event.target.innerText === \"Deactivate\") {\r\n     (status = \"deactive\");\r\n     let updatestatus = await updateUser(id, { status });\r\n     updatestatus.error\r\n      ?  setValues({ ...values,createUser:\"\", error: updatestatus.error})\r\n      :  setValues({ ...values, error:\"\",createUser:\"Status Changed\" });\r\n     \r\n   }\r\n   else if(event.target.innerText === \"Activate\"){\r\n     (status = \"active\");\r\n     let updatestatus = await updateUser(id, { status });\r\n     updatestatus.error\r\n      ?  setValues({ ...values,createUser:\"\", error: updatestatus.error})\r\n      :  setValues({ ...values, error:\"\",createUser:\"Status Changed\" });\r\n   }\r\n   else if (event.target.innerText === \"Reset\") {\r\n     \r\n     let updatestatus = await updateUser(id, { password });\r\n     updatestatus.error\r\n      ?  setValues({ ...values,createUser:\"\", error: updatestatus.error})\r\n      :  setValues({ ...values, error:\"\",createUser:\"Password has been reset\" });\r\n     \r\n   }\r\n      \r\n    loadUsers();\r\n  };\r\n\r\n\r\n  \r\n  //handle change input\r\n  const handleChange = (name:string) => (event:React.ChangeEvent<any>) => {\r\n    setValues({ ...values, error: \"\", createUser: \"\", [name]: event.target.value });\r\n    loadUsers();\r\n  };\r\n   //handle form submission\r\n   \r\n  const clickSubmit = async (event: React.ChangeEvent<any>) => {\r\n    //console.log(error);\r\n    event.preventDefault();\r\n    //set error empty\r\n    setValues({ ...values, error: \"\" });\r\n    //access sign in api\r\n    let adduserdata = await adduser({ email, password });\r\n    if (adduserdata.error) {\r\n      setValues({ ...values,createUser:\"\", error: adduserdata.error});\r\n       } \r\n    else\r\n    {\r\n    \r\n        setValues({ ...values, error:\"\",createUser:\"Email created\" });\r\n     \r\n    }\r\n    loadUsers();\r\n  };\r\n \r\n\r\n//error div\r\n  const showError = () => (\r\n    <div\r\n      className=\"alert alert-danger\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n  const paginate = (pageNumber:number) => {\r\n    //setInfo(\"\");\r\n    setCurrentPage(pageNumber);\r\n  };\r\n   const changeModalstate = async (event:any) => {\r\n     let { value } = event.currentTarget;\r\n     //find user\r\n     \r\n     \r\n     \r\n     let edituser = await finduser(value);\r\n     \r\n    if (edituser.error) {\r\n       setValues({ ...values,createUser:\"\", error: edituser.error});\r\n    } else {\r\n      setEditUserInfo({ ...edituser.users[0] });\r\n      setModalPasswordIsOpen(true);\r\n    }\r\n    \r\n  };\r\n   const changeModalemail = async (event:any) => {\r\n     let { value } = event.currentTarget;\r\n     //find user\r\n     \r\n     \r\n     \r\n     let edituser = await finduser(value);\r\n     \r\n    if (edituser.error) {\r\n       setValues({ ...values,createUser:\"\", error: edituser.error});\r\n    } else {\r\n      setEditUserInfo({ ...edituser.users[0] });\r\n      setModalEmailIsOpen(true);\r\n    }\r\n    \r\n  };\r\n    let history = useHistory();\r\n const signoutnow =async() => {\r\n   await signout();\r\n   history.push(\"/\")\r\n  };\r\n  const fetchstatus = (info:any) => {\r\n    info.error\r\n      ?  setValues({ ...values,createUser:\"\", error: info.error})\r\n      :setValues({ ...values, error:\"\",createUser:\"Password  Updated\" });\r\n    setModalPasswordIsOpen(false);\r\n    signoutnow();\r\n  };\r\n   const fetchemailstatus = (info:any) => {\r\n    info.error\r\n      ?  setValues({ ...values,createUser:\"\", error: info.error})\r\n      :setValues({ ...values, error:\"\",createUser:\"Email  Updated\" });\r\n     setModalEmailIsOpen(false);\r\n     loadUsers();\r\n    \r\n  };\r\n \r\n  return (\r\n    <Layouttwo>\r\n      <div className=\"main__container\">\r\n        <div className=\"main__title\">\r\n          <img src=\"assets/banner.jpg\" alt=\"\" />\r\n          <div className=\"main__greeting\">\r\n            <h1 className=\"text-primary-p\">Add Users</h1>\r\n       \r\n          </div>\r\n        </div>\r\n\r\n        <hr className=\"main__cards\" />\r\n          <div className=\"charts\">\r\n          <div className=\"charts__left\">\r\n            <div className=\"charts__left__title\">\r\n              <div>\r\n                <h1 className=\"text-title\">Add a User Email</h1>\r\n               \r\n              </div>\r\n            </div>\r\n            <div id=\"apex1\">\r\n              {showError()}\r\n              <Showsuccess createUser={createUser} />\r\n              <Userform email={email} handleChange={handleChange} clickSubmit={clickSubmit} changeModalstate={ changeModalstate}/>\r\n              <Editpassword modalPasswordIsOpen={modalPasswordIsOpen}\r\n                setModalPasswordIsOpen={setModalPasswordIsOpen}\r\n                edituserinfo={edituserinfo}\r\n                fetchstatus={fetchstatus} />\r\n               <Editemail modalEmailIsOpen={modalEmailIsOpen}\r\n                setModalEmailIsOpen={setModalEmailIsOpen}\r\n                edituserinfo={edituserinfo}\r\n                fetchemailstatus={ fetchemailstatus}/>\r\n            </div>\r\n          </div>\r\n          <div className=\"charts__right\">\r\n            <div className=\"charts__right__title\">\r\n              <div>\r\n                <h1 className=\"text-title\">Manage Users</h1>\r\n                \r\n              </div>\r\n            </div>\r\n           \r\n              \r\n            <Displayusers changeaccessStatus={changeaccessStatus} displayusers={currentUsers} changeStatus={changeStatus} indexOfFirstPost={indexOfFirstPost} changeModalemail={changeModalemail}  />\r\n             <Pagination postsPerpage={postsPerpage} totalPost={displayusers.length} paginate={paginate} currentPage={currentPage} />\r\n          </div>\r\n              </div>\r\n           \r\n       \r\n      </div>\r\n    </Layouttwo>\r\n  );\r\n};\r\nexport default Users;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\ntype Props = {\r\n    msg: string;\r\n}\r\nconst Message = ({msg}:Props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"alert alert-info alert-dismissible fade show\" role=\"alert\">\r\n  {msg}\r\n  <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nMessage.propTypes = {\r\n    msg: PropTypes.string.isRequired\r\n\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\ntype Props = {\r\n    percentage: number;\r\n}\r\nconst Progress = ({percentage}:Props) => {\r\n    return (\r\n        <div className=\"progress\">\r\n            <div className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n                role=\"progressbar\"\r\n                style={{ width: `${percentage}%` }}\r\n               >\r\n                {percentage}%\r\n                \r\n                </div>\r\n</div>\r\n    )\r\n}\r\n\r\nProgress.propTypes = {\r\n    percentage: PropTypes.number.isRequired\r\n\r\n}\r\n\r\nexport default Progress\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { LOCAL } from \"../Api/apiconfig\";\r\nimport axios from \"axios\";\r\nimport Message from './Message';\r\nimport Progress from './Progress';\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(\"\");\r\n  const [filename, setFilename] = useState(\"Choose File\");\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState('');\r\n  const [uploadPercentage, setUploadpercentage] = useState<number>(0);\r\n  const onFileChange = (e: React.ChangeEvent<any>) => {\r\n    \r\n    console.log(e.target.files[0].name);\r\n    \r\n    setFilename(e.target.files[0].name);\r\n  \r\n    setFile(e.target.files[0]);\r\n  };\r\n  const onSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    const formdata = new FormData();\r\n    formdata.append(\"file\", file);\r\n    try {\r\n      const res = await axios.post(`${LOCAL}/upload`, formdata, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        }, onUploadProgress: progressEvent => {\r\n          setUploadpercentage(Math.round((progressEvent.loaded * 100)/progressEvent.total))\r\n           setTimeout(() => setUploadpercentage(0), 10000);\r\n        }\r\n      });\r\n     \r\n      const { fileName, filePath } = res.data;\r\n      setUploadedFile({ fileName, filePath });\r\n      setMessage('File uploaded');\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        setMessage(\"there was a problem with the  server\");\r\n      } else {\r\n        setMessage(err.response.data.msg);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {message ? <Message msg={message}/> :null}\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"custom-file mb-4\">\r\n          <input\r\n            onChange={onFileChange}\r\n            type=\"file\"\r\n            className=\"custom-file-input\"\r\n            id=\"customFile\"\r\n          />\r\n          <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n            {filename}\r\n          </label>\r\n        </div>\r\n        <Progress percentage={ uploadPercentage}/>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Upload\"\r\n          className=\"btn btn-primary btn-block mt-4\"\r\n        />\r\n      </form>\r\n       {uploadedFile ? <div className=\"row mt-5\">\r\n        <div className=\"col-md-6 m-auto\">\r\n          <h3>{\r\n          //uploadedFile.fileName\r\n          }</h3>\r\n        </div>\r\n      </div> : null\r\n      }\r\n     \r\n    </Fragment>\r\n    \r\n  );\r\n};\r\nexport default FileUpload;\r\n","import Layouttwo from \"../Layout/Layertwo\"\r\nimport FileUpload from \"../Component/Fileupload\"\r\n\r\nconst Allocate = () => {\r\n  \r\n  return (\r\n    <Layouttwo>\r\n      <div className=\"main__container\">\r\n        <div className=\"main__title\">\r\n          <img src=\"assets/banner.jpg\" alt=\"\" />\r\n          <div className=\"main__greeting\">\r\n            <h1 className=\"text-primary-p\">Profile</h1>\r\n       \r\n          </div>\r\n        </div>\r\n\r\n        <hr className=\"main__cards\" />\r\n\r\n       <div className=\"charts\">\r\n          <div className=\"charts__left\">\r\n            <div className=\"charts__left__title\">\r\n              <div>\r\n                <h1 className=\"text-title\">Upload Your Excel Sheet</h1>\r\n              </div>\r\n            </div>\r\n            <div id=\"apex1\">\r\n              <FileUpload/>\r\n              \r\n            </div>\r\n          </div>\r\n          <div className=\"charts__right\">\r\n            <div className=\"charts__right__title\">\r\n              <div>\r\n                <h1 className=\"text-title\">Allocate Manually</h1>\r\n              </div>\r\n            </div>\r\n            <div className=\"charts__right__cards\">\r\n              \r\n\r\n              \r\n            </div>\r\n          </div>\r\n              </div>\r\n           \r\n               \r\n      </div>\r\n    </Layouttwo>\r\n  );\r\n};\r\nexport default Allocate;\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport {\r\n  isAuthenticated,\r\n  \r\n} from \"./index\";\r\ntype Props = {\r\n    component: any;\r\n}\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }:Props) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuthenticated() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/\",\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Signin from \"./Pages/Signin/Signin\";\r\nimport Dashboard from \"./Pages/Dashboard\";\r\nimport Manageallocations from \"./Pages/Manageallocations\";\r\nimport Users from \"./Pages/Users\";\r\nimport Allocate from \"./Pages/allocate\";\r\nimport {\r\n  PrivateRoute,\r\n} from \"./auth/Privateroute\";\r\n\r\n\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Signin} /> \r\n       <PrivateRoute\r\n          path=\"/dashboard\"\r\n          exact\r\n          component={Dashboard}\r\n        />\r\n         <PrivateRoute\r\n          path=\"/manageallocations\"\r\n          exact\r\n          component={Manageallocations}\r\n        />\r\n          <PrivateRoute\r\n          path=\"/allocate\"\r\n          exact\r\n          component={Allocate}\r\n        />\r\n         <PrivateRoute\r\n          path=\"/users\"\r\n          exact\r\n          component={Users}\r\n        />\r\n       \r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Route from \"./Route\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Route />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}